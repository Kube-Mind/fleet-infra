externalSecret:
  clusterSecretStore:
    vault:
      annotations:
        vault.hashicorp.com/role: bao-admin
      provider:
        vault:
          # server: "https://bao.jcan.dev"
          server: "http://openbao.openbao.svc.cluster.local:8200"
          path: "kv"
          # Version is the Vault KV secret engine version.
          # This can be either "v1" or "v2", defaults to "v2"
          version: "v2"
          auth:
            # points to a secret that contains a vault token
            # https://www.vaultproject.io/docs/auth/token
            tokenSecretRef:
              name: "bao-admin"
              key: "token"
              namespace: "secrets-integrator"

  externalSecrets:
    - name: "argowf-external-secret"
      namespaces:
        - argo-workflows
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/storage/harbor
            metadataPolicy: None
            property: regcred
          secretKey: config.json
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: ARGOWF_CLIENT_ID
          secretKey: ARGOWF_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: ARGOWF_CLIENT_SECRET
          secretKey: ARGOWF_CLIENT_SECRET
    
    - name: "argocd-external-secret"
      namespaces:
        - argo-cd
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/core/argo-cd
            metadataPolicy: None
            property: slack-token
          secretKey: slack-token
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/core/argo-cd
            metadataPolicy: None
            property: GITLAB_APPLICATION_ID
          secretKey: GITLAB_APPLICATION_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/core/argo-cd
            metadataPolicy: None
            property: GITLAB_CLIENT_SECRET
          secretKey: GITLAB_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: ARGOCD_CLIENT_ID
          secretKey: ARGOCD_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: ARGOCD_CLIENT_SECRET
          secretKey: ARGOCD_CLIENT_SECRET

    - name: "authentik-external-secret"
      namespaces:
        - authentik
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: AUTHENTIK_SECRET_KEY
          secretKey: AUTHENTIK_SECRET_KEY
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: AUTHENTIK_NOTIFICATIONS_SLACK_WEBHOOK
          secretKey: AUTHENTIK_NOTIFICATIONS_SLACK_WEBHOOK

        # USERS
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: AUTHENTIK_ADMIN_EMAIL
          secretKey: AUTHENTIK_ADMIN_EMAIL
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: AUTHENTIK_ADMIN_PASSWORD
          secretKey: AUTHENTIK_ADMIN_PASSWORD
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: AUTHENTIK_BACKUP_ADMIN_EMAIL
          secretKey: AUTHENTIK_BACKUP_ADMIN_EMAIL
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: AUTHENTIK_BACKUP_ADMIN_PASSWORD
          secretKey: AUTHENTIK_BACKUP_ADMIN_PASSWORD

        # APPLICATIONS
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: ARGOCD_CLIENT_ID
          secretKey: ARGOCD_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: ARGOCD_CLIENT_SECRET
          secretKey: ARGOCD_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: ARGOWF_CLIENT_ID
          secretKey: ARGOWF_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: ARGOWF_CLIENT_SECRET
          secretKey: ARGOWF_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: GRAFANA_CLIENT_ID
          secretKey: GRAFANA_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: GRAFANA_CLIENT_SECRET
          secretKey: GRAFANA_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: HARBOR_CLIENT_ID
          secretKey: HARBOR_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: HARBOR_CLIENT_SECRET
          secretKey: HARBOR_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: IMMICH_CLIENT_ID
          secretKey: IMMICH_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: IMMICH_CLIENT_SECRET
          secretKey: IMMICH_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: JUPYTERHUB_CLIENT_ID
          secretKey: JUPYTERHUB_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: JUPYTERHUB_CLIENT_SECRET
          secretKey: JUPYTERHUB_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: OWNCLOUD_CLIENT_ID
          secretKey: OWNCLOUD_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: OWNCLOUD_CLIENT_SECRET
          secretKey: OWNCLOUD_CLIENT_SECRET

    - name: "dnsfix-external-secret"
      namespaces:
        - dnsfix
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/dnsfix
            metadataPolicy: None
            property: CLOUDFLARE_API_KEY
          secretKey: CLOUDFLARE_API_KEY
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/dnsfix
            metadataPolicy: None
            property: CLOUDFLARE_API_TOKEN
          secretKey: CLOUDFLARE_API_TOKEN
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/dnsfix
            metadataPolicy: None
            property: CLOUDFLARE_EMAIL
          secretKey: CLOUDFLARE_EMAIL

    - name: "github-runner-external-secret"
      namespaces:
        - github-runner
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/ci/github-runner
            metadataPolicy: None
            property: github_token
          secretKey: github_token

    - name: "gitlab-runner-external-secret"
      namespaces:
        - gitlab-runner
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/ci/gitlab-runner
            metadataPolicy: None
            property: runner-registration-token
          secretKey: runner-registration-token
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/ci/gitlab-runner
            metadataPolicy: None
            property: runner-token
          secretKey: runner-token
  
    - name: "grafana-external-secret"
      namespaces:
        - kube-prometheus-stack
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/observability/grafana
            metadataPolicy: None
            property: GITLAB_APPLICATION_ID
          secretKey: GF_AUTH_GITLAB_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/observability/grafana
            metadataPolicy: None
            property: GITLAB_CLIENT_SECRET
          secretKey: GF_AUTH_GITLAB_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: GRAFANA_CLIENT_ID
          secretKey: GF_AUTH_AUTHENTIK_CLIENT_ID
          # GF_AUTH_GENERIC_OAUTH_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: GRAFANA_CLIENT_SECRET
          secretKey: GF_AUTH_AUTHENTIK_CLIENT_SECRET
          # GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET

    - name: "harbor-external-secret"
      namespaces:
        - harbor
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
            argocd.argoproj.io/secret-type: repository
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: Base64
            key: platform/storage/harbor
            metadataPolicy: None
            property: SSO_AUTHENTIK_OVERWRITE_JSON
          secretKey: CONFIG_OVERWRITE_JSON

    - name: "immich-external-secret"
      namespaces:
        - immich
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        engineVersion: v2
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
        data:
          DB_PASSWORD: "{{ .IMMICH_DB_PASSWORD }}"
          immich-config.yaml: |
                ffmpeg:
                  accel: disabled
                  accelDecode: false
                  acceptedAudioCodecs:
                  - aac
                  - mp3
                  - libopus
                  - pcm_s16le
                  acceptedContainers:
                  - mov
                  - ogg
                  - webm
                  acceptedVideoCodecs:
                  - h264
                  bframes: -1
                  cqMode: auto
                  crf: 23
                  gopSize: 0
                  maxBitrate: "0"
                  preferredHwDevice: auto
                  preset: ultrafast
                  refs: 0
                  targetAudioCodec: aac
                  targetResolution: "720"
                  targetVideoCodec: h264
                  temporalAQ: false
                  threads: 0
                  tonemap: hable
                  transcode: required
                  twoPass: false
                image:
                  colorspace: p3
                  extractEmbedded: false
                  preview:
                    format: jpeg
                    quality: 80
                    size: 1440
                  thumbnail:
                    format: webp
                    quality: 80
                    size: 250
                job:
                  backgroundTask:
                    concurrency: 5
                  faceDetection:
                    concurrency: 2
                  library:
                    concurrency: 5
                  metadataExtraction:
                    concurrency: 5
                  migration:
                    concurrency: 5
                  notifications:
                    concurrency: 5
                  search:
                    concurrency: 5
                  sidecar:
                    concurrency: 5
                  smartSearch:
                    concurrency: 2
                  thumbnailGeneration:
                    concurrency: 3
                  videoConversion:
                    concurrency: 1
                library:
                  scan:
                    cronExpression: 0 0 * * *
                    enabled: true
                  watch:
                    enabled: false
                logging:
                  enabled: true
                  level: log
                server:
                  externalDomain: https://immich.jcan.dev
                machineLearning:
                  clip:
                    enabled: true
                    modelName: ViT-B-32__openai
                  duplicateDetection:
                    enabled: true
                    maxDistance: 0.01
                  enabled: true
                  facialRecognition:
                    enabled: true
                    maxDistance: 0.5
                    minFaces: 1
                    minScore: 0.7
                    modelName: buffalo_l
                  urls:
                    - http://immich-machine-learning:3003
                map:
                  darkStyle: https://tiles.immich.cloud/v1/style/dark.json
                  enabled: true
                  lightStyle: https://tiles.immich.cloud/v1/style/light.json
                metadata:
                  faces:
                    import: true
                newVersionCheck:
                  enabled: true
                oauth:
                  enabled: true
                  issuerUrl: "https://auth.jcan.dev/application/o/immich/"
                  scope: "openid email profile"
                  autoLaunch: true
                  autoRegister: true
                  buttonText: "Login with SSO"
                  clientId: "{{ .IMMICH_CLIENT_ID }}"
                  clientSecret: "{{ .IMMICH_CLIENT_SECRET }}"
                passwordLogin:
                  enabled: false
                reverseGeocoding:
                  enabled: true
                theme:
                  customCss: ""
                trash:
                  days: 30
                  enabled: true
                backup:
                  database:
                    enabled: true
                    cronExpression: "0 02 * * *"
                    keepLastAmount: 14
                notifications:
                  smtp:
                    enabled: false
                    from: ""
                    replyTo: ""
                    transport:
                      ignoreCert: false
                      host: ""
                      port: 587
                      username: ""
                      password: ""
                user:
                  deleteDelay: 7
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: media/management/immich
            metadataPolicy: None
            property: IMMICH_DB_PASSWORD
          secretKey: IMMICH_DB_PASSWORD
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: IMMICH_CLIENT_ID
          secretKey: IMMICH_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: IMMICH_CLIENT_SECRET
          secretKey: IMMICH_CLIENT_SECRET

    - name: "jupyterhub-external-secret"
      namespaces:
        - jupyterhub
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/tools/jupyterhub
            metadataPolicy: None
            property: GITLAB_APPLICATION_ID
          secretKey: GITLAB_APPLICATION_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/tools/jupyterhub
            metadataPolicy: None
            property: GITLAB_CLIENT_SECRET
          secretKey: GITLAB_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/tools/jupyterhub
            metadataPolicy: None
            property: GITLAB_CALLBACK_URL
          secretKey: GITLAB_CALLBACK_URL
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: JUPYTERHUB_CLIENT_ID
          secretKey: JUPYTERHUB_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: JUPYTERHUB_CLIENT_SECRET
          secretKey: JUPYTERHUB_CLIENT_SECRET

    - name: "open-webui-external-secret"
      namespaces:
        - open-webui
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/ai/open-webui
            metadataPolicy: None
            property: GITLAB_APPLICATION_ID
          secretKey: OAUTH_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/ai/open-webui
            metadataPolicy: None
            property: GITLAB_CLIENT_SECRET
          secretKey: OAUTH_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/ai/open-webui
            metadataPolicy: None
            property: GOOGLE_CLIENT_ID
          secretKey: GOOGLE_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/ai/open-webui
            metadataPolicy: None
            property: GOOGLE_CLIENT_SECRET
          secretKey: GOOGLE_CLIENT_SECRET
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/ai/open-webui
            metadataPolicy: None
            property: PIPELINES_API_KEY
          secretKey: PIPELINES_API_KEY

    - name: "owncloud-external-secret"
      namespaces:
        - owncloud
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
            argocd.argoproj.io/secret-type: repository
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: OWNCLOUD_CLIENT_ID
          secretKey: OWNCLOUD_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: platform/security/authentik
            metadataPolicy: None
            property: OWNCLOUD_CLIENT_SECRET
          secretKey: OWNCLOUD_CLIENT_SECRET

    - name: "rabbitmq-external-secret"
      namespaces:
        - rabbitmq
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/messaging/rabbitmq
            metadataPolicy: None
            property: rabbitmq-password
          secretKey: rabbitmq-password
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/messaging/rabbitmq
            metadataPolicy: None
            property: rabbitmq-erlang-cookie
          secretKey: rabbitmq-erlang-cookie

    - name: "regcred-external-secrets"
      namespaces:
        - dnsfix
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        type: kubernetes.io/dockerconfigjson
        data:
          # workaround for helm to not render "<nil>" during rendering process in pre helm deployment
          .dockerconfigjson: "{{ .base64Regcred | toString }}"
      data:
        - secretKey: base64Regcred
          remoteRef:
            conversionStrategy: Default	
            decodingStrategy: None
            key: platform/storage/harbor
            metadataPolicy: None
            property: regcred

    - name: "pft-external-secret"
      namespaces:
        - argo-cd
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
            argocd.argoproj.io/secret-type: repository
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/work/pft
            metadataPolicy: None
            property: username
          secretKey: username
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/work/pft
            metadataPolicy: None
            property: access-token
          secretKey: password
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/work/pft
            metadataPolicy: None
            property: url
          secretKey: url
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/work/pft
            metadataPolicy: None
            property: type
          secretKey: type
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/work/pft
            metadataPolicy: None
            property: name
          secretKey: name
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: workloads/work/pft
            metadataPolicy: None
            property: project
          secretKey: project

    - name: "pft-external-secret-regcred"
      namespaces:
        - pft
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        type: kubernetes.io/dockerconfigjson
        data:
          # workaround for helm to not render "<nil>" during rendering process in pre helm deployment
          .dockerconfigjson: "{{ .base64Regcred | toString }}"
      data:
        - secretKey: base64Regcred
          remoteRef:
            conversionStrategy: Default	
            decodingStrategy: None
            key: workloads/work/pft
            metadataPolicy: None
            property: regcred

kubectl:
  image: rancher/kubectl
  tag: v1.34.0-amd64