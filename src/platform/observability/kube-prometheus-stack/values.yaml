grafana:
  enabled: true
  
  # enforce random password generation upon sync
  adminPassword: null
  envFromSecrets:
    - name: grafana-external-secret
      optional: false

  grafana.ini:
    auth:
      # remove the login form from the sign-in page 
      disable_login_form: true

    auth.basic:
      # disable HTTP Basic Authentication
      enabled: false

    auth.gitlab:
      enabled: true
      # go directly to SSO! (hint: `/login?disableAutoLogin`)
      # auto_login: false
      allow_sign_up: true
      role_attribute_path: contains(groups[*], 'Kube-Mind') && 'Editor' || 'Viewer'
      allowed_groups: Kube-Mind
      auto_assign_org_role: Viewer
      role_attribute_strict: false
      auth_url: https://gitlab.com/oauth/authorize
      token_url: https://gitlab.com/oauth/token
      api_url: https://gitlab.com/api/v4/user
      scopes: openid,email,profile
      
    auth.generic_oauth:
      enabled: true
      name: Authentik
      client_id: $__env{GF_AUTH_AUTHENTIK_CLIENT_ID}
      client_secret: $__env{GF_AUTH_AUTHENTIK_CLIENT_SECRET}
      scopes: openid profile email
      auth_url: https://auth.jcan.dev/application/o/authorize/
      token_url: https://auth.jcan.dev/application/o/token/
      api_url: https://auth.jcan.dev/application/o/userinfo/
      login_attribute_path: preferred_username
      groups_attribute_path: groups
      name_attribute_path: name
      email_attribute_path: email
      role_attribute_path: contains(groups[*], 'Grafana Admins') && 'Admin' || contains(groups[*], 'Grafana Users') && 'Editor' || 'Viewer'
      allow_sign_up: true
      auto_login: false
      use_pkce: true

    server:
      root_url: https://grafana.jcan.dev
      serve_from_sub_path: false

  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources: []
      # - name: Prometheus
      #   type: prometheus
      #   url: http://kube-prometheus-stack-prometheus.kube-prometheus-stack:9090/
      #   access: proxy
      #   isDefault: false
  dashboards:
    default:
      k8s-dashboard:
        gnetId: 15661
        revision: 2
        datasource: Prometheus
      dcgm-exporter:
        gnetId: 22515
        revision: 1
        datasource: Prometheus
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: 'default'
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          updateIntervalSeconds: 10
          options:
            path: /var/lib/grafana/dashboards/default

  sidecar:
    dashboards:
      enabled: true
      searchNamespace: ALL
    alerts:
      enabled: true
      searchNamespace: ALL

  ingress:
    enabled: true
    ingressClassName: traefik
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prd
    hosts:
    - grafana.jcan.dev
    tls:
    - secretName: "grafana-tls-key"
      hosts:
      - grafana.jcan.dev

prometheusOperator:
  tls:
    enabled: false
  admissionWebhooks:
    enabled: false

prometheus:
  annotations:
    argocd.argoproj.io/skip-health-check: 'true'
  prometheusSpec:
    podMonitorSelectorNilUsesHelmValues: false
    additionalScrapeConfigs:
    - job_name: gpu-metrics
      scrape_interval: 1s
      metrics_path: /metrics
      scheme: http
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - nvidia-operator
      relabel_configs:
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: kubernetes_node

prometheus-node-exporter:
  tolerations:
    - key: node-role.kubernetes.io/control-plane
      operator: Exists
      effect: NoSchedule
    - key: node-role.kubernetes.io/etcd
      operator: Exists
      effect: NoExecute