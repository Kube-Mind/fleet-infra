apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: platform-storage
  namespace: argo-cd
  annotations:
    argocd.argoproj.io/sync-wave: '0'
    argocd.argoproj.io/tracking-id: platform:argoproj.io/Application:argo-cd/storage
  finalizers:
    - resources-finalizer.argocd.argoproj.io
  labels:
    app.kubernetes.io/instance: storage
    app.kubernetes.io/part-of: platform
    app.kubernetes.io/managed-by: argo-cd
spec:
  goTemplate: true
  generators:
    - list:
        elements:
          - name: harbor
            wave: 20
            ignoreDifferences:
              - group: ''
                kind: Secret
                name: harbor-core
                jsonPointers:
                  - /data/CSRF_KEY
                  - /data/secret
                  - /data/tls.crt
                  - /data/tls.key
              - group: ''
                kind: Secret
                name: harbor-database
                jsonPointers:
                  - /data/POSTGRES_PASSWORD
              - group: ''
                kind: Secret
                name: harbor-jobservice
                jsonPointers:
                  - /data/JOBSERVICE_SECRET
              - group: ''
                kind: Secret
                name: harbor-registry
                jsonPointers:
                  - /data/REGISTRY_HTTP_SECRET
              - group: ''
                kind: Secret
                name: harbor-registry-htpasswd
                jsonPointers:
                  - /data/REGISTRY_HTPASSWD
              - group: apps
                kind: Deployment
                jqPathExpressions:
                  - .spec.template.metadata.annotations."checksum/secret"
                  - .spec.template.metadata.annotations."checksum/secret-core"
                  - .spec.template.metadata.annotations."checksum/secret-jobservice"
              - group: apps
                kind: StatefulSet
                jqPathExpressions:
                - '.spec.volumeClaimTemplates[].apiVersion'
                - '.spec.volumeClaimTemplates[].kind'
          - name: longhorn
            wave: 10
          - name: nfs-provisioner
            wave: 10
  template:
    metadata:
      name: '{{ .name }}'
      annotations:
        argocd.argoproj.io/tracking-id: platform-storage:argoproj.io/Application:argo-cd/'{{ .name }}'
      labels:
        app.kubernetes.io/instance: '{{ .name }}'
        app.kubernetes.io/component: '{{ .name }}'
        app.kubernetes.io/part-of: platform-storage
    spec:
      project: platform-storage
      source:
        repoURL: https://github.com/Kube-Mind/fleet-infra.git
        targetRevision: HEAD
        path: 'src/platform/storage/{{ .name }}'
        kustomize: {} # Let Kustomize handle naming
      destination:
        namespace: '{{ .name }}'
        server: https://kubernetes.default.svc
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        retry:
          limit: 1
          backoff:
            duration: 10s
            factor: 2
            maxDuration: 3m
        syncOptions:
          - CreateNamespace=true
          - ApplyOutOfSyncOnly=true
          - ServerSideApply=true
          - PruneLast=true
          - RespectIgnoreDifferences=true
  templatePatch: |
    {{- if .ignoreDifferences }}
    spec:
      ignoreDifferences:
      {{- toYaml .ignoreDifferences | nindent 12 }}
    {{- end }}