apiVersion: batch/v1
kind: Job
metadata:
  name: rabbitmq-consumer-job
  namespace: rabbitmq
spec:
  template:
    spec:
      containers:
        - name: consumer
          image: python:3.10-slim
          command: ["/bin/sh", "-c"]
          args:
            - |
              pip install pika && \
              python -c "
              import pika, os
              creds = pika.PlainCredentials(os.environ['username'], os.environ['password'])
              conn = pika.BlockingConnection(pika.ConnectionParameters(host='rabbitmq.rabbitmq.svc.cluster.local', credentials=creds))
              ch = conn.channel()
              ch.queue_declare(queue='testq')
              method_frame, header_frame, body = ch.basic_get('testq')
              if body: print(f'RECEIVED: {body.decode()}')
              conn.close()"
          envFrom:
            - secretRef:
                name: rabbitmq-default-user
          resources:
            requests:
              cpu: "0.5"
              memory: 512M
            limits:
              cpu: "1.0"
              memory: 512M
      restartPolicy: OnFailure # Added this line
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 1
              preference:
                matchExpressions:
                  - key: kubernetes.io/hostname
                    operator: In
                    values: ["odin"]