---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-producer-script
  namespace: kafka
data:
  produce.py: |
    import sys
    from kafka import KafkaProducer

    producer = KafkaProducer(bootstrap_servers="kafka-test-cluster-kafka-bootstrap:9092")
    for msg in [b"hello", b"world", b"from", b"pyre"]:
        producer.send("test-topic", msg)
    producer.flush()
    print("Produced 4 messages.")
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kafka-consumer-script
  namespace: kafka
data:
  consume.py: |
    import sys
    from kafka import KafkaConsumer

    consumer = KafkaConsumer(
        "test-topic",
        bootstrap_servers="kafka-test-cluster-kafka-bootstrap:9092",
        auto_offset_reset="earliest",
        consumer_timeout_ms=10000,
    )

    for msg in consumer:
        print(f"Received: {msg.value.decode()}")
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-producer
  namespace: kafka
spec:
  template:
    spec:
      containers:
        - name: producer
          image: python:3.11-slim
          command: ["python", "/scripts/produce.py"]
          volumeMounts:
            - name: script
              mountPath: /scripts
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
        - name: pyre
          image: python:3.11-slim
          command: ["sh", "-c", "pip install pyre-check && pyre check /scripts"]
          volumeMounts:
            - name: script
              mountPath: /scripts
      restartPolicy: Never
      volumes:
        - name: script
          configMap:
            name: kafka-producer-script
  backoffLimit: 2
---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-consumer
  namespace: kafka
spec:
  template:
    spec:
      containers:
        - name: consumer
          image: python:3.11-slim
          command: ["python", "/scripts/consume.py"]
          volumeMounts:
            - name: script
              mountPath: /scripts
          env:
            - name: PYTHONUNBUFFERED
              value: "1"
        - name: pyre
          image: python:3.11-slim
          command: ["sh", "-c", "pip install pyre-check && pyre check /scripts"]
          volumeMounts:
            - name: script
              mountPath: /scripts
      restartPolicy: Never
      volumes:
        - name: script
          configMap:
            name: kafka-consumer-script
  backoffLimit: 2
