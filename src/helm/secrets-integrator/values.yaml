externalSecret:
  clusterSecretStore:
    vault:
      annotations:
        vault.hashicorp.com/role: bao-admin
      provider:
        vault:
          server: "https://bao.jcan.dev"
          path: "kv"
          # Version is the Vault KV secret engine version.
          # This can be either "v1" or "v2", defaults to "v2"
          version: "v2"
          auth:
            # points to a secret that contains a vault token
            # https://www.vaultproject.io/docs/auth/token
            tokenSecretRef:
              name: "bao-admin"
              key: "token"
              namespace: "secrets-integrator"

  externalSecrets:
    - name: "argocd-notifications-secret"
      namespaces:
        - argo-cd
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: chatops/slack
            metadataPolicy: None
            property: slack-token
          secretKey: slack-token

    - name: "argocd-mfa"
      namespaces:
        - argo-cd
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      template:
        metadata:
          labels:
            app.kubernetes.io/part-of: argocd
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: gitlab/argo-cd
            metadataPolicy: None
            property: GITLAB_APPLICATION_ID
          secretKey: GITLAB_APPLICATION_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: gitlab/argo-cd
            metadataPolicy: None
            property: GITLAB_CLIENT_SECRET
          secretKey: GITLAB_CLIENT_SECRET

    # - name: "docker-config"
    #   namespaces:
    #     - argo-workflows
    #     - webhooks
    #   secretStoreRef:
    #     name: vault
    #     kind: ClusterSecretStore
    #   data:
    #     - remoteRef:
    #         conversionStrategy: Default
    #         decodingStrategy: None
    #         key: harbor/service
    #         metadataPolicy: None
    #         property: regcred
    #       secretKey: config.json

    - name: "github-runner"
      namespaces:
        - github-scale-set
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: github/runner
            metadataPolicy: None
            property: github_token
          secretKey: github_token

    - name: "gitlab-grafana-oauth"
      namespaces:
        - kube-prometheus-stack
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        # GitLab OAuth
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: gitlab/grafana
            metadataPolicy: None
            property: GITLAB_APPLICATION_ID
          secretKey: GF_AUTH_GITLAB_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: gitlab/grafana
            metadataPolicy: None
            property: GITLAB_CLIENT_SECRET
          secretKey: GF_AUTH_GITLAB_CLIENT_SECRET

        # Generic OAuth
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: gitlab/grafana
            metadataPolicy: None
            property: GITLAB_APPLICATION_ID
          secretKey: GF_AUTH_GENERIC_OAUTH_CLIENT_ID
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: gitlab/grafana
            metadataPolicy: None
            property: GITLAB_CLIENT_SECRET
          secretKey: GF_AUTH_GENERIC_OAUTH_CLIENT_SECRET

    - name: "gitlab-runner"
      namespaces:
        - gitlab-runner
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: gitlab/runner
            metadataPolicy: None
            property: runner-registration-token
          secretKey: runner-registration-token
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: gitlab/runner
            metadataPolicy: None
            property: runner-token
          secretKey: runner-token

    # - name: "harbor-regcred"
    #   namespaces:
    #     - argo-workflows
    #     - dnsfix
    #   secretStoreRef:
    #     name: vault
    #     kind: ClusterSecretStore
    #   template:
    #     type: kubernetes.io/dockerconfigjson
    #     data:
    #       # workaround for helm to not render "<nil>" during rendering process in pre helm deployment
    #       .dockerconfigjson: "{{ .base64Regcred | toString }}"
    #   data:
    #     - secretKey: base64Regcred
    #       remoteRef:
    #         key: harbor/service
    #         property: regcred

    # - name: "nextcloud-bootstrap-secrets"
    #   namespaces:
    #     - nextcloud
    #   secretStoreRef:
    #     name: vault
    #     kind: ClusterSecretStore
    #   data:
    #     - remoteRef:
    #         conversionStrategy: Default
    #         decodingStrategy: None
    #         key: media-centre/nextcloud
    #         metadataPolicy: None
    #         property: NEXTCLOUD_ADMIN_USER
    #       secretKey: NEXTCLOUD_ADMIN_USER
    #     - remoteRef:
    #         conversionStrategy: Default
    #         decodingStrategy: None
    #         key: media-centre/nextcloud
    #         metadataPolicy: None
    #         property: NEXTCLOUD_ADMIN_PASSWORD
    #       secretKey: NEXTCLOUD_ADMIN_PASSWORD

    - name: "rabbitmq"
      namespaces:
        - rabbitmq
      secretStoreRef:
        name: vault
        kind: ClusterSecretStore
      data:
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: messaging/rabbitmq
            metadataPolicy: None
            property: rabbitmq-password
          secretKey: rabbitmq-password
        - remoteRef:
            conversionStrategy: Default
            decodingStrategy: None
            key: messaging/rabbitmq
            metadataPolicy: None
            property: rabbitmq-erlang-cookie
          secretKey: rabbitmq-erlang-cookie
